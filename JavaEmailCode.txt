package com.email;


import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.*;
import javax.mail.internet.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;

public class EmailUtil {

    private  String timeStamp = new SimpleDateFormat("d MMM, yyyy hh:mm a").format(new Date());
    private  String body = "Testing mail Load Testing. This is test mail with attachment sent on " + timeStamp;


    public String sendMailWithSingleAttachment(String subject, String filePath, String toMailId,String fromMailId,String ccEmailAddresses,String host,String Password) throws MessagingException {
       
    	String flag = "Fail";

        Properties props = System.getProperties();
        props.put("mail.smtp.host", host);
        props.put("mail.smtps.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        Session session = Session.getInstance(props, null);
        MimeMessage message = new MimeMessage(session);
        message.setFrom(new InternetAddress(fromMailId));
        String sendTo = toMailId;
        message.setRecipients(Message.RecipientType.TO, sendTo);
        message.setRecipients(Message.RecipientType.CC, InternetAddress.parse(ccEmailAddresses));
        message.setSubject(subject);
        System.setProperty("EmailSubject", subject);
        BodyPart messageBodyPart = new MimeBodyPart();
        messageBodyPart.setText(body);
        Multipart multipart = new MimeMultipart();
        multipart.addBodyPart(messageBodyPart);
        String fileName = "TestingFile.pdf";
        addAttachment(multipart, filePath, fileName);
        System.setProperty("eFileName", fileName);
        message.setContent(multipart);
        try {
            Transport tr = session.getTransport("smtps");
            tr.connect(host, fromMailId, Password);
            tr.sendMessage(message, message.getAllRecipients());
            System.setProperty("eSendTo", sendTo);
            System.setProperty("eFrom", fromMailId);
            System.setProperty("eBody", body);
            tr.close();
            flag = "Pass";
        } catch (SendFailedException sfe) {
            System.out.println(sfe);
        }
        return flag;
    }

    public String sendMailWithMultipleAttachments(String subject, String filePath, String toMailId,String fromMailId,String ccEmailAddresses,String host,String Password) throws MessagingException {
        
    	String flag = "Fail";
        Properties props = System.getProperties();
        props.put("mail.smtp.host", host);
        props.put("mail.smtps.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        Session session = Session.getInstance(props, null);
        MimeMessage message = new MimeMessage(session);
        message.setFrom(new InternetAddress(fromMailId));
        String sendTo = toMailId;
        message.setRecipients(Message.RecipientType.TO, sendTo);
        message.setRecipients(Message.RecipientType.CC, InternetAddress.parse(ccEmailAddresses));
        message.setSubject(subject);
        System.setProperty("EmailSubject", subject);
        BodyPart messageBodyPart = new MimeBodyPart();
        messageBodyPart.setText(body);
        Multipart multipart = new MimeMultipart();
        multipart.addBodyPart(messageBodyPart);
        addAttachment(multipart, filePath, "TestingFileA.pdf");
        addAttachment(multipart, filePath, "TestingFileB.pdf");
        addAttachment(multipart, filePath, "TestingFileC.pdf");

        message.setContent(multipart);
        try {
            Transport tr = session.getTransport("smtps");
            tr.connect(host, fromMailId, Password);
            tr.sendMessage(message, message.getAllRecipients());
            tr.close();
            flag = "Pass";
        } catch (SendFailedException sfe) {

        }
        return flag;
    }

    public void addAttachment(Multipart multipart, String filePath, String fileName) throws MessagingException {
        DataSource source = new FileDataSource(filePath);
        BodyPart messageBodyPart = new MimeBodyPart();
        messageBodyPart.setDataHandler(new DataHandler(source));
        messageBodyPart.setFileName(fileName);
        multipart.addBodyPart(messageBodyPart);
    }
    
}
